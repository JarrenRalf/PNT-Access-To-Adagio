function onEdit(e)
{
  const range  = e.range;
  const values = range.getValues();
  const sheet  = e.source.getActiveSheet();

  if (areValuesPasted(range, values)) // If the user has pasted values
    exportData(values, sheet, range.rowStart)   
}

/**
 * This function checks if the user pasted values in column 1 or 2 that span atleast past column 30.
 * Additionally, it checks if the user has clicked delete or not by checking if every value in the 
 * import data is blank.
 * 
 * @param    {Range}    range  : The range object generated by pasting the import data on the sheet
 * @param  {Object[][]} values : The import values pasted in the spreadsheet
 * @return {Boolean} Whether the import values are pasted in the spreadsheet or not
 * @author Jarren Ralf
 */
function areValuesPasted(range, values)
{
  return range.columnStart === 1 && range.columnEnd > 30 && !isEveryValueBlank(values);
}

/**
 * This function checks if every value in the import multi-array is blank, which means that the user has
 * highlighted and deleted all of the data.
 * 
 * @param {Object[][]} values : The import data
 * @return {Boolean} Whether the import data is deleted or not
 * @author Jarren Ralf
 */
function isEveryValueBlank(values)
{
  return values.every(arr => arr.every(val => val == '') === true);
}

/**
 * This function handles a paste event and reformats the data for uploading into Adagio.
 * 
 * @param {Object[][]}  data : The pasted data
 * @param   {Sheet}    sheet : The upload sheet 
 * @param   {Number}    row  : The row number that the data is being pasted into
 * @author Jarren Ralf
 */
function exportData(data, sheet, row)
{
  var exportData = data.map(val => 
    [val[0], val[1],  val[6],  val[7], val[11], val[13], val[15], val[18], val[12], val[14], val[16], val[18],
     val[7], val[7], val[54], val[45], val[50], val[45], val[28], val[29], val[30], val[31], val[22], val[23], 
     ...new Array(val.length - 24).fill('')]
  )

  exportData[0][12] = 'Cost Unit of Measure';
  exportData[0][13] = 'Price Unit of Measure';
  exportData[0][16] = data[0][50]; // Header: Most recent cost - ACCPAC
  exportData[0][17] = data[0][48]; // Header: Foreign exchange

  if (row === 1)
    sheet.clear()
  else
  {
    exportData.shift();
    exportData.push(new Array(exportData[0].length).fill(''))
  }
    
  sheet.getRange(row, 1, exportData.length, exportData[0].length).setNumberFormat('@').setValues(exportData)
  sheet.getDataRange().activate()
}